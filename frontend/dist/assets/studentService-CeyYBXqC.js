var e=Object.defineProperty,t=Object.defineProperties,n=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,o=(t,n,r)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[n]=r,d=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&o(e,n,t[n]);if(r)for(var n of r(t))a.call(t,n)&&o(e,n,t[n]);return e},u=(e,r)=>t(e,n(r)),l=(e,t,n)=>new Promise(((r,s)=>{var a=e=>{try{d(n.next(e))}catch(t){s(t)}},o=e=>{try{d(n.throw(e))}catch(t){s(t)}},d=e=>e.done?r(e.value):Promise.resolve(e.value).then(a,o);d((n=n.apply(e,t)).next())}));import{c as i,T as c}from"./index--09_5uxC.js";const p={getAllStudents:()=>l(void 0,null,(function*(){try{if(!(localStorage.getItem("token")||sessionStorage.getItem("token")))return c.error("Authentication required. Please log in again."),{students:[]};return(yield i.get("/admin/students/all")).data}catch(e){return e.response?401===e.response.status?c.error("Authentication required. Please log in again."):403===e.response.status?c.error("You do not have permission to access student data."):c.error("Failed to load students. Please try again later."):c.error("Network error. Please check your connection."),{students:[]}}})),getStudents:(...e)=>l(void 0,[...e],(function*(e={}){try{if(!(localStorage.getItem("token")||sessionStorage.getItem("token")))return c.error("Authentication required. Please log in again."),{students:[]};return(yield i.get("/admin/students",{params:e})).data}catch(t){return t.response?401===t.response.status?c.error("Authentication required. Please log in again."):403===t.response.status?c.error("You do not have permission to access student data."):c.error("Failed to load students. Please try again later."):c.error("Network error. Please check your connection."),{students:[]}}})),getStudentsByIndexNumber:e=>l(void 0,null,(function*(){try{const t={indexNumber:e.trim()};return(yield i.get("/admin/students",{params:t})).data}catch(t){throw t}})),registerStudent:e=>l(void 0,null,(function*(){var t,n,r,s,a;try{const s=u(d({},e),{indexNumber:null==(t=e.indexNumber)?void 0:t.toUpperCase(),parent_telephone:null==(n=e.parent_telephone)?void 0:n.trim()}),a=yield i.post("/admin/students",s);return c.success("Student registered successfully"),(null==(r=a.data)?void 0:r.qrCode)?u(d({},a.data),{qrCodeUrl:a.data.qrCode}):a.data}catch(o){throw c.error((null==(a=null==(s=o.response)?void 0:s.data)?void 0:a.message)||"Failed to register student"),o}})),updateStudent:(e,t)=>l(void 0,null,(function*(){var n,r;try{const n=d({},t);t.indexNumber&&(n.indexNumber=t.indexNumber.toUpperCase()),t.parent_telephone&&(n.parent_telephone=t.parent_telephone.trim());const r=yield i.put(`/admin/students/${e}`,n);return c.success("Student updated successfully"),r.data}catch(s){throw c.error((null==(r=null==(n=s.response)?void 0:n.data)?void 0:r.message)||"Failed to update student"),s}})),deleteStudent:e=>l(void 0,null,(function*(){var t,n;try{const t=yield i.delete(`/admin/students/${e}`);return c.success("Student deleted successfully"),t.data}catch(r){throw c.error((null==(n=null==(t=r.response)?void 0:t.data)?void 0:n.message)||"Failed to delete student"),r}})),getStudentProfile:e=>l(void 0,null,(function*(){try{return(yield i.get(`/students/profile/${e}`)).data}catch(t){throw t}})),updateStudentProfile:(e,t)=>l(void 0,null,(function*(){var n,r;try{const n=yield i.patch(`/students/profile/${e}`,t);return c.success("Student profile updated successfully"),n.data}catch(s){throw c.error((null==(r=null==(n=s.response)?void 0:n.data)?void 0:r.message)||"Failed to update student profile"),s}})),generateStudentQRCode:e=>l(void 0,null,(function*(){try{return(yield i.get(`/admin/students/${e}/qr-code`,{responseType:"blob"})).data}catch(t){throw t}})),getStudentQRByIndex:e=>l(void 0,null,(function*(){try{if(!e)throw new Error("Index number is required");return(yield i.get(`/admin/students/qr-code/${e}`,{responseType:"blob"})).data}catch(t){throw t}})),bulkImportStudents:e=>l(void 0,null,(function*(){var t,n;try{const t=yield i.post("/admin/students/bulk-import",e,{headers:{"Content-Type":"multipart/form-data"}});return c.success("Students imported successfully"),t.data}catch(r){throw c.error((null==(n=null==(t=r.response)?void 0:t.data)?void 0:n.message)||"Failed to import students"),r}})),bulkUpdateStudents:e=>l(void 0,null,(function*(){var t,n;try{if(!e.students||!Array.isArray(e.students)||0===e.students.length)throw new Error("No students to update");const t=yield i.post("/admin/students/bulk-update",e);return c.success(`Successfully updated ${t.data.updatedCount||"multiple"} students`),t.data}catch(r){throw c.error((null==(n=null==(t=r.response)?void 0:t.data)?void 0:n.message)||"Failed to update students"),r}})),getStudentAttendanceHistory:(e,...t)=>l(void 0,[e,...t],(function*(e,t={}){var n,r;try{if(!e)return c.error("Invalid student ID"),{student:null,attendanceHistory:[],stats:{totalCount:0,presentCount:0,absentCount:0,leftCount:0,attendancePercentage:0},totalRecords:0};const a=new URLSearchParams;t.startDate&&a.append("startDate",t.startDate),t.endDate&&a.append("endDate",t.endDate),t.limit&&a.append("limit",t.limit),t.offset&&a.append("offset",t.offset),t.sortBy&&a.append("sortBy",t.sortBy),t.sortOrder&&a.append("sortOrder",t.sortOrder);try{const t=yield i.get(`/attendance/student/${e}/history?${a.toString()}`);if(null==(n=t.data)?void 0:n.success){const e=t.data.data||{};return{student:e.student||null,attendanceHistory:e.attendanceHistory||[],stats:e.stats||{totalCount:0,presentCount:0,absentCount:0,leftCount:0,attendancePercentage:0},totalRecords:e.totalRecords||0}}}catch(s){}const o=yield i.get(`/students/attendance-history/${e}?${a.toString()}`),d=(null==(r=o.data)?void 0:r.data)||o.data;return{student:(null==d?void 0:d.student)||null,attendanceHistory:(null==d?void 0:d.attendanceHistory)||[],stats:(null==d?void 0:d.stats)||{totalCount:0,presentCount:0,absentCount:0,leftCount:0,attendancePercentage:0},totalRecords:(null==d?void 0:d.totalRecords)||0}}catch(a){return c.error("Failed to load attendance history"),{student:null,attendanceHistory:[],stats:{totalCount:0,presentCount:0,absentCount:0,leftCount:0,attendancePercentage:0},totalRecords:0}}})),clearAttendanceHistory:e=>l(void 0,null,(function*(){try{if(!e)return c.error("Invalid student ID"),{success:!1,message:"Invalid student ID"};if(!window.confirm("Are you sure you want to clear all attendance history for this student? This action cannot be undone."))return{cancelled:!0};const t=yield i.delete(`/attendance/student/${e}/clear`);return c.success("Successfully cleared attendance history"),t.data}catch(t){return c.error("Failed to clear attendance history"),{success:!1,error:t.message}}})),deleteAttendanceRecord:(e,t)=>l(void 0,null,(function*(){try{if(!e||!t)return c.error("Invalid parameters"),{success:!1,message:"Invalid parameters"};if(!localStorage.getItem("token"))return c.error("You must be logged in to delete attendance records"),setTimeout((()=>{window.location.href="/login"}),1e3),{success:!1,message:"Authentication required"};if(!window.confirm("Are you sure you want to delete this attendance record? This action cannot be undone."))return{cancelled:!0};const n=yield i.delete(`/attendance/student/${e}/record/${t}`);return c.success("Successfully deleted attendance record"),n.data}catch(n){return n.response&&401===n.response.status?c.error("You do not have permission to delete attendance records"):n.response&&403===n.response.status?c.error("Admin privileges required to delete attendance records"):c.error("Failed to delete attendance record"),{success:!1,error:n.message}}})),getDashboardStats:()=>l(void 0,null,(function*(){try{return(yield i.get("/students/dashboard-stats")).data}catch(e){throw e}})),searchStudents:(e,...t)=>l(void 0,[e,...t],(function*(e,t={}){try{const n=d({search:e},t);return(yield i.get("/admin/students/search",{params:n})).data}catch(n){throw n}}))};export{p as s};
